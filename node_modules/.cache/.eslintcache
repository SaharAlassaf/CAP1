[{"/Users/shr/Documents/memory/src/index.js":"1","/Users/shr/Documents/memory/src/App.js":"2","/Users/shr/Documents/memory/src/components/Board/index.js":"3","/Users/shr/Documents/memory/src/components/Card/index.js":"4","/Users/shr/Documents/memory/src/components/Start/index.js":"5","/Users/shr/Documents/CAP1/src/index.js":"6","/Users/shr/Documents/CAP1/src/App.js":"7","/Users/shr/Documents/CAP1/src/components/Board/index.js":"8","/Users/shr/Documents/CAP1/src/components/Start/index.js":"9","/Users/shr/Documents/CAP1/src/components/Card/index.js":"10"},{"size":182,"mtime":1621757175670,"results":"11","hashOfConfig":"12"},{"size":348,"mtime":1636103026057,"results":"13","hashOfConfig":"12"},{"size":2363,"mtime":1636107668993,"results":"14","hashOfConfig":"12"},{"size":356,"mtime":1636106497256,"results":"15","hashOfConfig":"12"},{"size":1212,"mtime":1636104695211,"results":"16","hashOfConfig":"12"},{"size":182,"mtime":1621757175670,"results":"17","hashOfConfig":"18"},{"size":320,"mtime":1636108617825,"results":"19","hashOfConfig":"18"},{"size":2904,"mtime":1636129116221,"results":"20","hashOfConfig":"18"},{"size":1184,"mtime":1636129151265,"results":"21","hashOfConfig":"18"},{"size":362,"mtime":1636129123231,"results":"22","hashOfConfig":"18"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6ds9rh",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1ujrm48",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"42","usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shr/Documents/memory/src/index.js",[],"/Users/shr/Documents/memory/src/App.js",["48"],"/Users/shr/Documents/memory/src/components/Board/index.js",["49","50"],"import React, { useState, useEffect } from \"react\";\nimport Card from \"../Card\";\nimport \"./style.css\";\n\nfunction Board({ options }) {\n  const [game, setGame] = useState([]);\n  const [firstCard, setFirstCard] = useState(null);\n\n  const fronts = [\n    \"👹\",\n    \"👿\",\n    \"🧠\",\n    \"🚗\",\n    \"🚲\",\n    \"🚂\",\n    \"🧸\",\n    \"🤨\",\n    \"🤟\",\n    \"♥️\",\n    \"🦟\",\n    \"🦨\",\n  ];\n\n  useEffect(() => {\n    const newGame = [];\n    for (let i = 0; i < options / 2; i++) {\n      const firstOption = {\n        id: 2 * i,\n        frontId: i,\n        content: fronts[i],\n        flipped: false,\n        matched: false,\n      };\n      const secondOption = {\n        id: 2 * i + 1,\n        frontId: i,\n        content: fronts[i],\n        flipped: false,\n        matched: false,\n      };\n\n      newGame.push(firstOption);\n      newGame.push(secondOption);\n    }\n\n    const shuffledGame = newGame.sort(() => Math.random() - 0.5);\n    setGame(shuffledGame);\n    console.log(\"arr\", shuffledGame);\n  }, []);\n\n  const flipCardTo = (cardId, flipped) => {\n    setGame(\n      game.map((item, i) => {\n        if (i === cardId) {\n          return { ... item,\n            content: item.content,\n            flipped: !item.flipped,\n          };\n        } else {\n          return item;\n        }\n      })\n    );\n    console.log(\"g\",game);\n  };\n\n  const flip = (cardId) => {\n      console.log(\"id\",cardId);\n    if (firstCard === null) {\n      setFirstCard(cardId);\n    } else {\n      const firstCardContent = game[firstCard].content;\n      const secondCardContent = game[cardId].content;\n      if (firstCardContent === secondCardContent) {\n        setFirstCard(null);\n        console.log(\"same\");\n      } else {\n          console.log(\"diff\");\n        setTimeout(() => {\n          flipCardTo(firstCard, false);\n          flipCardTo(cardId, false);\n          setFirstCard(null);\n        }, 1000);\n      }\n    }\n    flipCardTo(cardId, !game[cardId].flipped);\n  };\n\n  console.log(\"F\",firstCard);\n  \n  if (game.length === 0) return <div>loading... </div>;\n  else {\n  return game.map((card, i) => {\n    console.log(\"card\", card.flipped);\n    return (\n      <div className=\"Board\">\n        <Card\n          key={i}\n          flip={() => {flip(i);}}\n          content={card.content}\n          flipped={card.flipped}\n        />\n      </div>\n    );\n  });\n}\n}\n\nexport default Board;\n","/Users/shr/Documents/memory/src/components/Card/index.js",[],"/Users/shr/Documents/memory/src/components/Start/index.js",[],"/Users/shr/Documents/CAP1/src/index.js",[],["51","52"],"/Users/shr/Documents/CAP1/src/App.js",["53"],"\nimport React from 'react';\nimport './App.css';\nimport Board from './components/Board'\nimport Start from './components/Start';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Test your memory 🧠\n      </header>\n      <Start />\n    </div>\n  );\n}\n\nexport default App;","/Users/shr/Documents/CAP1/src/components/Board/index.js",["54","55","56"],"import React, { useState, useEffect } from \"react\";\nimport Card from \"../Card\";\nimport \"./style.css\";\n\nfunction Board({ options }) {\n  const [game, setGame] = useState([]);\n  const [firstCard, setFirstCard] = useState(null);\n  const [seconds, setSeconds] = useState(10);\n  const [result, setResult] = useState(0);\n\n\n  const fronts = [\n    \"👹\",\n    \"👿\",\n    \"🧠\",\n    \"🚗\",\n    \"🚲\",\n    \"🚂\",\n    \"🧸\",\n    \"🤨\",\n    \"🤟\",\n    \"♥️\",\n    \"🦟\",\n    \"🦨\",\n  ];\n\n\n  useEffect(() => {\n    if (seconds > 0) {\n      setTimeout(() => setSeconds(seconds - 1), 10000);\n    } else {\n      setSeconds('Time is over!');\n    }\n  });\n\n  useEffect(() => {\n    const newGame = [];\n    for (let i = 0; i < options / 2; i++) {\n      const firstOption = {\n        id: 2 * i,\n        frontId: i,\n        content: fronts[i],\n        flipped: false,\n        // matched: false,\n      };\n      const secondOption = {\n        id: 2 * i + 1,\n        frontId: i,\n        content: fronts[i],\n        flipped: false,\n        // matched: false,\n      };\n\n      newGame.push(firstOption);\n      newGame.push(secondOption);\n    }\n\n    const shuffledGame = newGame.sort(() => Math.random() - 0.5);\n    setGame(shuffledGame);\n    console.log(\"arr\", shuffledGame);\n  }, []);\n\n  const flipCardTo = (cardId, flipped) => {\n    setGame(\n      game.map((item, i) => {\n        ////////////////////////////////// the problem  \n        if (i === cardId) {\n          return { ... item,\n            // content: item.content,\n            flipped: flipped,\n          };\n        } else {\n          return item;\n        }\n      })\n    );\n    console.log(\"g\",game);\n  };\n\n  const flip = (cardId) => {\n      // console.log(\"id\",cardId);\n    if (firstCard === null) {\n      setFirstCard(cardId);\n    } else {\n      const firstCardContent = game[firstCard].frontId;\n      const secondCardContent = game[cardId].frontId;\n      if (firstCardContent === secondCardContent) {\n        setResult(result+1);\n        setFirstCard(null);\n        console.log(\"same\");\n      } else {\n          console.log(\"diff\");\n        setTimeout(() => {\n          ////////////////////////////////// the problem  \n          flipCardTo(firstCard, false);\n          console.log(\"ONE\",firstCard);\n          flipCardTo(cardId, false);\n          console.log(\"TWO\",cardId);\n          setFirstCard(null);\n        }, 1000);\n      }\n    }\n    flipCardTo(cardId, !game[cardId].flipped);\n  };\n\n  console.log(\"F\",firstCard);\n  \n  if (game.length === 0) return <div>loading... </div>;\n  else {\n    return (\n      <>\n        <h4>{seconds}</h4>\n        <h4>{result}</h4>\n        {game.map((card, i) => {\n        return (<div className=\"Board\">\n          <Card\n            key={i}\n            flip={() => {flip(i)}}\n            content={card.content}\n            flipped={card.flipped}\n            />\n        </div>)\n      })}\n      </>\n    )\n}\n}\n\nexport default Board;\n","/Users/shr/Documents/CAP1/src/components/Start/index.js",["57"],"import React, { useState, useEffect } from \"react\";\nimport Board from \"../Board\";\n\nfunction Start() {\n  const [options, setOptions] = useState(null);\n\n  return (\n    <div>\n      <div className=\"container\">\n        <h1>Flip Card Game</h1>\n        <div>\n          {options === null ? (\n            <>\n              <button onClick={() => setOptions(4)}>Easy</button>\n              <button onClick={() => setOptions(6)}>Medium</button>\n              {/* <button onClick={() => setOptions(24)}>Hard</button> */}\n            </>\n          ) : (\n            <>\n              <button\n                onClick={() => {\n                  const prevOptions = options;\n                  setOptions(null);\n                  setTimeout(() => {\n                    setOptions(prevOptions);\n                  }, 5);\n                }}\n              >\n                Start Over\n              </button>\n              <button onClick={() => setOptions(null)}>Home</button>\n            </>\n          )}\n        </div>\n      </div>\n\n      {options ? (\n        <Board options={options} setOptions={setOptions} />\n      ) : (\n        <h2>Let's Start!</h2>\n      )}\n    </div>\n  );\n}\n\nexport default Start;\n","/Users/shr/Documents/CAP1/src/components/Card/index.js",[],{"ruleId":"58","severity":1,"message":"59","line":4,"column":8,"nodeType":"60","messageId":"61","endLine":4,"endColumn":13},{"ruleId":"62","severity":1,"message":"63","line":49,"column":6,"nodeType":"64","endLine":49,"endColumn":8,"suggestions":"65"},{"ruleId":"66","severity":1,"message":"67","line":55,"column":23,"nodeType":"68","messageId":"69","endLine":55,"endColumn":24,"fix":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"58","severity":1,"message":"59","line":4,"column":8,"nodeType":"60","messageId":"61","endLine":4,"endColumn":13},{"ruleId":"62","severity":1,"message":"75","line":28,"column":3,"nodeType":"60","endLine":28,"endColumn":12,"suggestions":"76"},{"ruleId":"62","severity":1,"message":"63","line":61,"column":6,"nodeType":"64","endLine":61,"endColumn":8,"suggestions":"77"},{"ruleId":"66","severity":1,"message":"67","line":68,"column":23,"nodeType":"68","messageId":"69","endLine":68,"endColumn":24,"fix":"78"},{"ruleId":"58","severity":1,"message":"79","line":1,"column":27,"nodeType":"60","messageId":"61","endLine":1,"endColumn":36},"no-unused-vars","'Board' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fronts' and 'options'. Either include them or remove the dependency array.","ArrayExpression",["80"],"rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"81","text":"82"},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"React Hook useEffect contains a call to 'setSeconds'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [seconds] as a second argument to the useEffect Hook.",["85"],["86"],{"range":"87","text":"82"},"'useEffect' is defined but never used.",{"desc":"88","fix":"89"},[1122,1123],"","no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},{"desc":"88","fix":"92"},[1436,1437],"Update the dependencies array to be: [fronts, options]",{"range":"93","text":"94"},"Add dependencies array: [seconds]",{"range":"95","text":"96"},{"range":"97","text":"94"},[979,981],"[fronts, options]",[618,618],", [seconds]",[1236,1238]]