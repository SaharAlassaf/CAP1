[{"/Users/shr/Documents/memory/src/index.js":"1","/Users/shr/Documents/memory/src/App.js":"2","/Users/shr/Documents/memory/src/components/Board/index.js":"3","/Users/shr/Documents/memory/src/components/Card/index.js":"4","/Users/shr/Documents/memory/src/components/Start/index.js":"5"},{"size":182,"mtime":1621757175670,"results":"6","hashOfConfig":"7"},{"size":348,"mtime":1636103026057,"results":"8","hashOfConfig":"7"},{"size":2363,"mtime":1636107668993,"results":"9","hashOfConfig":"7"},{"size":356,"mtime":1636106497256,"results":"10","hashOfConfig":"7"},{"size":1212,"mtime":1636104695211,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6ds9rh",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shr/Documents/memory/src/index.js",[],"/Users/shr/Documents/memory/src/App.js",["23"],"/Users/shr/Documents/memory/src/components/Board/index.js",["24","25"],"import React, { useState, useEffect } from \"react\";\nimport Card from \"../Card\";\nimport \"./style.css\";\n\nfunction Board({ options }) {\n  const [game, setGame] = useState([]);\n  const [firstCard, setFirstCard] = useState(null);\n\n  const fronts = [\n    \"👹\",\n    \"👿\",\n    \"🧠\",\n    \"🚗\",\n    \"🚲\",\n    \"🚂\",\n    \"🧸\",\n    \"🤨\",\n    \"🤟\",\n    \"♥️\",\n    \"🦟\",\n    \"🦨\",\n  ];\n\n  useEffect(() => {\n    const newGame = [];\n    for (let i = 0; i < options / 2; i++) {\n      const firstOption = {\n        id: 2 * i,\n        frontId: i,\n        content: fronts[i],\n        flipped: false,\n        matched: false,\n      };\n      const secondOption = {\n        id: 2 * i + 1,\n        frontId: i,\n        content: fronts[i],\n        flipped: false,\n        matched: false,\n      };\n\n      newGame.push(firstOption);\n      newGame.push(secondOption);\n    }\n\n    const shuffledGame = newGame.sort(() => Math.random() - 0.5);\n    setGame(shuffledGame);\n    console.log(\"arr\", shuffledGame);\n  }, []);\n\n  const flipCardTo = (cardId, flipped) => {\n    setGame(\n      game.map((item, i) => {\n        if (i === cardId) {\n          return { ... item,\n            content: item.content,\n            flipped: !item.flipped,\n          };\n        } else {\n          return item;\n        }\n      })\n    );\n    console.log(\"g\",game);\n  };\n\n  const flip = (cardId) => {\n      console.log(\"id\",cardId);\n    if (firstCard === null) {\n      setFirstCard(cardId);\n    } else {\n      const firstCardContent = game[firstCard].content;\n      const secondCardContent = game[cardId].content;\n      if (firstCardContent === secondCardContent) {\n        setFirstCard(null);\n        console.log(\"same\");\n      } else {\n          console.log(\"diff\");\n        setTimeout(() => {\n          flipCardTo(firstCard, false);\n          flipCardTo(cardId, false);\n          setFirstCard(null);\n        }, 1000);\n      }\n    }\n    flipCardTo(cardId, !game[cardId].flipped);\n  };\n\n  console.log(\"F\",firstCard);\n  \n  if (game.length === 0) return <div>loading... </div>;\n  else {\n  return game.map((card, i) => {\n    console.log(\"card\", card.flipped);\n    return (\n      <div className=\"Board\">\n        <Card\n          key={i}\n          flip={() => {flip(i);}}\n          content={card.content}\n          flipped={card.flipped}\n        />\n      </div>\n    );\n  });\n}\n}\n\nexport default Board;\n","/Users/shr/Documents/memory/src/components/Card/index.js",[],"/Users/shr/Documents/memory/src/components/Start/index.js",[],{"ruleId":"26","severity":1,"message":"27","line":4,"column":8,"nodeType":"28","messageId":"29","endLine":4,"endColumn":13},{"ruleId":"30","severity":1,"message":"31","line":49,"column":6,"nodeType":"32","endLine":49,"endColumn":8,"suggestions":"33"},{"ruleId":"34","severity":1,"message":"35","line":55,"column":23,"nodeType":"36","messageId":"37","endLine":55,"endColumn":24,"fix":"38"},"no-unused-vars","'Board' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fronts' and 'options'. Either include them or remove the dependency array.","ArrayExpression",["39"],"rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"40","text":"41"},{"desc":"42","fix":"43"},[1122,1123],"","Update the dependencies array to be: [fronts, options]",{"range":"44","text":"45"},[979,981],"[fronts, options]"]