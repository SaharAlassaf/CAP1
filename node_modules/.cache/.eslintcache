[{"/Users/shr/Documents/memory/src/index.js":"1","/Users/shr/Documents/memory/src/App.js":"2","/Users/shr/Documents/memory/src/components/Board/index.js":"3","/Users/shr/Documents/memory/src/components/Card/index.js":"4","/Users/shr/Documents/memory/src/components/Start/index.js":"5","/Users/shr/Documents/CAP1/src/index.js":"6","/Users/shr/Documents/CAP1/src/App.js":"7","/Users/shr/Documents/CAP1/src/components/Board/index.js":"8","/Users/shr/Documents/CAP1/src/components/Start/index.js":"9","/Users/shr/Documents/CAP1/src/components/Card/index.js":"10"},{"size":182,"mtime":1621757175670,"results":"11","hashOfConfig":"12"},{"size":348,"mtime":1636103026057,"results":"13","hashOfConfig":"12"},{"size":2363,"mtime":1636107668993,"results":"14","hashOfConfig":"12"},{"size":356,"mtime":1636106497256,"results":"15","hashOfConfig":"12"},{"size":1212,"mtime":1636104695211,"results":"16","hashOfConfig":"12"},{"size":182,"mtime":1621757175670,"results":"17","hashOfConfig":"18"},{"size":197,"mtime":1636182776830,"results":"19","hashOfConfig":"18"},{"size":3151,"mtime":1636183077351,"results":"20","hashOfConfig":"18"},{"size":1296,"mtime":1636183601897,"results":"21","hashOfConfig":"18"},{"size":356,"mtime":1636106497256,"results":"22","hashOfConfig":"18"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6ds9rh",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1ujrm48",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/shr/Documents/memory/src/index.js",[],"/Users/shr/Documents/memory/src/App.js",["46"],"/Users/shr/Documents/memory/src/components/Board/index.js",["47","48"],"import React, { useState, useEffect } from \"react\";\nimport Card from \"../Card\";\nimport \"./style.css\";\n\nfunction Board({ options }) {\n  const [game, setGame] = useState([]);\n  const [firstCard, setFirstCard] = useState(null);\n\n  const fronts = [\n    \"👹\",\n    \"👿\",\n    \"🧠\",\n    \"🚗\",\n    \"🚲\",\n    \"🚂\",\n    \"🧸\",\n    \"🤨\",\n    \"🤟\",\n    \"♥️\",\n    \"🦟\",\n    \"🦨\",\n  ];\n\n  useEffect(() => {\n    const newGame = [];\n    for (let i = 0; i < options / 2; i++) {\n      const firstOption = {\n        id: 2 * i,\n        frontId: i,\n        content: fronts[i],\n        flipped: false,\n        matched: false,\n      };\n      const secondOption = {\n        id: 2 * i + 1,\n        frontId: i,\n        content: fronts[i],\n        flipped: false,\n        matched: false,\n      };\n\n      newGame.push(firstOption);\n      newGame.push(secondOption);\n    }\n\n    const shuffledGame = newGame.sort(() => Math.random() - 0.5);\n    setGame(shuffledGame);\n    console.log(\"arr\", shuffledGame);\n  }, []);\n\n  const flipCardTo = (cardId, flipped) => {\n    setGame(\n      game.map((item, i) => {\n        if (i === cardId) {\n          return { ... item,\n            content: item.content,\n            flipped: !item.flipped,\n          };\n        } else {\n          return item;\n        }\n      })\n    );\n    console.log(\"g\",game);\n  };\n\n  const flip = (cardId) => {\n      console.log(\"id\",cardId);\n    if (firstCard === null) {\n      setFirstCard(cardId);\n    } else {\n      const firstCardContent = game[firstCard].content;\n      const secondCardContent = game[cardId].content;\n      if (firstCardContent === secondCardContent) {\n        setFirstCard(null);\n        console.log(\"same\");\n      } else {\n          console.log(\"diff\");\n        setTimeout(() => {\n          flipCardTo(firstCard, false);\n          flipCardTo(cardId, false);\n          setFirstCard(null);\n        }, 1000);\n      }\n    }\n    flipCardTo(cardId, !game[cardId].flipped);\n  };\n\n  console.log(\"F\",firstCard);\n  \n  if (game.length === 0) return <div>loading... </div>;\n  else {\n  return game.map((card, i) => {\n    console.log(\"card\", card.flipped);\n    return (\n      <div className=\"Board\">\n        <Card\n          key={i}\n          flip={() => {flip(i);}}\n          content={card.content}\n          flipped={card.flipped}\n        />\n      </div>\n    );\n  });\n}\n}\n\nexport default Board;\n","/Users/shr/Documents/memory/src/components/Card/index.js",[],"/Users/shr/Documents/memory/src/components/Start/index.js",[],"/Users/shr/Documents/CAP1/src/index.js",[],["49","50"],"/Users/shr/Documents/CAP1/src/App.js",[],"/Users/shr/Documents/CAP1/src/components/Board/index.js",["51","52"],"import React, { useState, useEffect } from \"react\";\nimport Card from \"../Card\";\nimport \"./style.css\";\n\nfunction Board({ options }) {\n  const [game, setGame] = useState([]);\n  const [firstCard, setFirstCard] = useState(null);\n  const [seconds, setSeconds] = useState(10);\n  const [result, setResult] = useState(0);\n\n  const fronts = [\n    \"🌄\",\n    \"⛺\",\n    \"🌅\",\n    \"🏜️\",\n    \"🏕️\",\n    \"🍂\",\n    \"🔦\",\n    \"🌋\",\n  ];\n\n  useEffect(() => {\n    if (seconds > 0) {\n      setTimeout(() => setSeconds(seconds - 1), 10000);\n    } else {\n      setSeconds(\"Time is over!\");\n    }\n  });\n\n  useEffect(() => {\n    const newGame = [];\n    for (let i = 0; i < options / 2; i++) {\n      const firstOption = {\n        id: 2 * i,\n        frontId: i,\n        content: fronts[i],\n        flipped: false,\n        // matched: false,\n      };\n      const secondOption = {\n        id: 2 * i + 1,\n        frontId: i,\n        content: fronts[i],\n        flipped: false,\n        // matched: false,\n      };\n\n      newGame.push(firstOption);\n      newGame.push(secondOption);\n    }\n\n    const shuffledGame = newGame.sort(() => Math.random() - 0.5);\n    setGame(shuffledGame);\n    console.log(\"arr\", shuffledGame);\n  }, []);\n\n  const flipCardTo = (cardId, flipped) => {\n    setGame(\n      game.map((item, i) => {\n        ////////////////////////////////// the problem 😡🔪\n        if (i === cardId) {\n          return {\n            ...item,\n            flipped: flipped,\n          };\n        } else {\n          return item;\n        }\n      })\n    );\n    console.log(\"g\", game);\n  };\n\n  const flip = (cardId) => {\n    // console.log(\"id\",cardId);\n    if (firstCard === null) {\n      setFirstCard(cardId);\n    } else {\n      const firstCardContent = game[firstCard].frontId;\n      const secondCardContent = game[cardId].frontId;\n      if (firstCardContent === secondCardContent) {\n        setResult(result + 1);\n        setFirstCard(null);\n        console.log(\"same\");\n      } else {\n        console.log(\"diff\");\n        setTimeout(() => {\n          ////////////////////////////////// the problem 😡🔫\n          flipCardTo(firstCard, false);\n          console.log(\"ONE\", firstCard);\n          flipCardTo(cardId, false);\n          console.log(\"TWO\", cardId);\n          setFirstCard(null);\n        }, 1000);\n      }\n      console.log(firstCardContent +\" is \"+firstCard +\" and \"+ secondCardContent +\" is \"+cardId);\n    }\n    flipCardTo(cardId, !game[cardId].flipped);\n    console.log(\"F\", firstCard);\n\n  };\n\n\n  if (game.flipped === true) return <div>end game</div>;\n  else {\n    return (\n      <>\n        <div className=\"result\">\n          <h4>{seconds}</h4>\n          <h4>{result}</h4>\n        </div>\n        <div className=\"Board\">\n          {game.map((card, i) => {\n            return (\n              <div key={i}>\n                <Card\n                  \n                  flip={() => {\n                    flip(i);\n                  }}\n                  content={card.content}\n                  flipped={card.flipped}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Board;\n","/Users/shr/Documents/CAP1/src/components/Start/index.js",[],"/Users/shr/Documents/CAP1/src/components/Card/index.js",[],{"ruleId":"53","severity":1,"message":"54","line":4,"column":8,"nodeType":"55","messageId":"56","endLine":4,"endColumn":13},{"ruleId":"57","severity":1,"message":"58","line":49,"column":6,"nodeType":"59","endLine":49,"endColumn":8,"suggestions":"60"},{"ruleId":"61","severity":1,"message":"62","line":55,"column":23,"nodeType":"63","messageId":"64","endLine":55,"endColumn":24,"fix":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"57","severity":1,"message":"70","line":22,"column":3,"nodeType":"55","endLine":22,"endColumn":12,"suggestions":"71"},{"ruleId":"57","severity":1,"message":"58","line":55,"column":6,"nodeType":"59","endLine":55,"endColumn":8,"suggestions":"72"},"no-unused-vars","'Board' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fronts' and 'options'. Either include them or remove the dependency array.","ArrayExpression",["73"],"rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"74","text":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"React Hook useEffect contains a call to 'setSeconds'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [seconds] as a second argument to the useEffect Hook.",["78"],["79"],{"desc":"80","fix":"81"},[1122,1123],"","no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},{"desc":"80","fix":"84"},"Update the dependencies array to be: [fronts, options]",{"range":"85","text":"86"},"Add dependencies array: [seconds]",{"range":"87","text":"88"},{"range":"89","text":"86"},[979,981],"[fronts, options]",[577,577],", [seconds]",[1195,1197]]