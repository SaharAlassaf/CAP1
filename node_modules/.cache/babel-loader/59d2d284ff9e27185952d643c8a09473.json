{"ast":null,"code":"var _jsxFileName = \"/Users/shr/Documents/memory/src/components/Board/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"../Card\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board(_ref) {\n  _s();\n\n  let {\n    options\n  } = _ref;\n  const [game, setGame] = useState([]);\n  const [firstCard, setFirstCard] = useState(null);\n  const fronts = [\"👹\", \"👿\", \"🧠\", \"🚗\", \"🚲\", \"🚂\", \"🧸\", \"🤨\", \"🤟\", \"♥️\", \"🦟\", \"🦨\"];\n  useEffect(() => {\n    const newGame = [];\n\n    for (let i = 0; i < options / 2; i++) {\n      const firstOption = {\n        id: 2 * i,\n        frontId: i,\n        content: fronts[i],\n        faceUp: false,\n        matched: false\n      };\n      const secondOption = {\n        id: 2 * i + 1,\n        frontId: i,\n        content: fronts[i],\n        faceUp: false,\n        matched: false\n      };\n      newGame.push(firstOption);\n      newGame.push(secondOption);\n    }\n\n    const shuffledGame = newGame.sort(() => Math.random() - 0.5);\n    setGame(shuffledGame);\n    console.log(\"arr\", shuffledGame);\n  }, []);\n\n  const flipCardTo = (cardIdx, faceUp) => {\n    setGame(game.map((f, i) => {\n      if (i === cardIdx) {\n        return {\n          content: f.content,\n          faceUp: !f.faceUp\n        };\n      } else {\n        return f;\n      }\n    }));\n    console.log(\"g\", game);\n  };\n\n  const flip = cardIdx => {\n    console.log(\"id\", cardIdx);\n\n    if (firstCard === null) {\n      setFirstCard(cardIdx);\n    } else {\n      const firstCardContent = game[firstCard].content;\n      const secondCardContent = game[cardIdx].content;\n\n      if (firstCardContent === secondCardContent) {\n        setFirstCard(null);\n        console.log(\"same\");\n      } else {\n        lo;\n        setTimeout(() => {\n          flipCardTo(firstCard, false);\n          flipCardTo(cardIdx, false);\n          setFirstCard(null);\n        }, 1000);\n      }\n    }\n\n    flipCardTo(cardIdx, !game[cardIdx].faceUp);\n  };\n\n  console.log(\"F\", firstCard);\n  if (game.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading... \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 33\n  }, this);else {\n    return game.map((card, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Board\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          flip: () => {\n            flip(i);\n          },\n          content: card.content,\n          faceUp: card.faceUp\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this);\n    });\n  }\n}\n\n_s(Board, \"mTKP5R6QZ9BDjtOKZTiiR2LH3LY=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/shr/Documents/memory/src/components/Board/index.js"],"names":["React","useState","useEffect","Card","Board","options","game","setGame","firstCard","setFirstCard","fronts","newGame","i","firstOption","id","frontId","content","faceUp","matched","secondOption","push","shuffledGame","sort","Math","random","console","log","flipCardTo","cardIdx","map","f","flip","firstCardContent","secondCardContent","lo","setTimeout","length","card"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Card from \"../Card\";\nimport \"./style.css\";\n\nfunction Board({ options }) {\n  const [game, setGame] = useState([]);\n  const [firstCard, setFirstCard] = useState(null);\n\n  const fronts = [\n    \"👹\",\n    \"👿\",\n    \"🧠\",\n    \"🚗\",\n    \"🚲\",\n    \"🚂\",\n    \"🧸\",\n    \"🤨\",\n    \"🤟\",\n    \"♥️\",\n    \"🦟\",\n    \"🦨\",\n  ];\n\n  useEffect(() => {\n    const newGame = [];\n    for (let i = 0; i < options / 2; i++) {\n      const firstOption = {\n        id: 2 * i,\n        frontId: i,\n        content: fronts[i],\n        faceUp: false,\n        matched: false,\n      };\n      const secondOption = {\n        id: 2 * i + 1,\n        frontId: i,\n        content: fronts[i],\n        faceUp: false,\n        matched: false,\n      };\n\n      newGame.push(firstOption);\n      newGame.push(secondOption);\n    }\n\n    const shuffledGame = newGame.sort(() => Math.random() - 0.5);\n    setGame(shuffledGame);\n    console.log(\"arr\", shuffledGame);\n  }, []);\n\n  const flipCardTo = (cardIdx, faceUp) => {\n    setGame(\n      game.map((f, i) => {\n        if (i === cardIdx) {\n          return {\n            content: f.content,\n            faceUp: !f.faceUp,\n          };\n        } else {\n          return f;\n        }\n      })\n    );\n    console.log(\"g\",game);\n  };\n\n  const flip = (cardIdx) => {\n      console.log(\"id\",cardIdx);\n    if (firstCard === null) {\n      setFirstCard(cardIdx);\n    } else {\n      const firstCardContent = game[firstCard].content;\n      const secondCardContent = game[cardIdx].content;\n      if (firstCardContent === secondCardContent) {\n        setFirstCard(null);\n        console.log(\"same\");\n      } else {\n          lo\n        setTimeout(() => {\n          flipCardTo(firstCard, false);\n          flipCardTo(cardIdx, false);\n          setFirstCard(null);\n        }, 1000);\n      }\n    }\n    flipCardTo(cardIdx, !game[cardIdx].faceUp);\n  };\n\n  console.log(\"F\",firstCard);\n  \n  if (game.length === 0) return <div>loading... </div>;\n  else {\n  return game.map((card, i) => {\n    return (\n      <div className=\"Board\">\n        <Card\n          key={i}\n          flip={() => {flip(i);}}\n          content={card.content}\n          faceUp={card.faceUp}\n        />\n      </div>\n    );\n  });\n}\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}