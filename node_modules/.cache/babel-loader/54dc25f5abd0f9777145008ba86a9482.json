{"ast":null,"code":"var _jsxFileName = \"/Users/shr/Documents/memory/src/components/Board/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Card from '../Card';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Board = () => {\n  _s();\n\n  const [deck, setDeck] = useState([]);\n  const [firstCard, setFirstCard] = useState(null);\n  const fronts = ['💩', '👹', '👿', '🧠', '🚗', '🚲', '🚂', '🧸', '🤨', '🤟', '♥️', '🦟', '🦨'];\n  deck = fronts.concat(fronts).sort(() => Math.random() - 0.5).map(item => {\n    return {\n      content: item,\n      faceUp: false\n    };\n  });\n\n  const flipCardTo = (cardIdx, faceUp) => {\n    setDeck(deck.map((f, i) => {\n      if (i === cardIdx) {\n        return {\n          content: f.content,\n          faceUp: !f.faceUp\n        };\n      } else {\n        return f;\n      }\n    }));\n  };\n\n  const flip = cardIdx => {\n    if (firstCard === null) {\n      setFirstCard(cardIdx);\n    } else {\n      const firstCardContent = deck[firstCard].content;\n      const secondCardContent = deck[cardIdx].content;\n\n      if (firstCardContent === secondCardContent) {\n        setFirstCard(null);\n      } else {\n        setTimeout(() => {\n          flipCardTo(firstCard, false);\n          flipCardTo(cardIdx, false);\n          setFirstCard(null);\n        }, 1000);\n      }\n    }\n\n    flipCardTo(cardIdx, !deck[cardIdx].faceUp);\n  };\n\n  console.log(this.state.firstCard);\n  return this.state.deck.map((f, i) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Board\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        flip: () => {\n          this.flip(i);\n        },\n        content: f.content,\n        faceUp: f.faceUp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this);\n  });\n};\n\n_s(Board, \"nRmd8LGxi9sAHE8LkFM5AfBaaxM=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/shr/Documents/memory/src/components/Board/index.js"],"names":["React","useState","Card","Board","deck","setDeck","firstCard","setFirstCard","fronts","concat","sort","Math","random","map","item","content","faceUp","flipCardTo","cardIdx","f","i","flip","firstCardContent","secondCardContent","setTimeout","console","log","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAO,aAAP;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;AAEA,QAAMO,MAAM,GAAG,CACb,IADa,EAEb,IAFa,EAGb,IAHa,EAIb,IAJa,EAKb,IALa,EAMb,IANa,EAOb,IAPa,EAQb,IARa,EASb,IATa,EAUb,IAVa,EAWb,IAXa,EAYb,IAZa,EAab,IAba,CAAf;AAgBCJ,EAAAA,IAAI,GAAGI,MAAM,CACXC,MADK,CACED,MADF,EAELE,IAFK,CAEA,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAFtB,EAGLC,GAHK,CAGDC,IAAI,IAAI;AACX,WAAO;AACLC,MAAAA,OAAO,EAAED,IADJ;AAELE,MAAAA,MAAM,EAAE;AAFH,KAAP;AAID,GARK,CAAP;;AAWH,QAAMC,UAAU,GAAE,CAACC,OAAD,EAAUF,MAAV,KAAqB;AACrCX,IAAAA,OAAO,CACHD,IAAI,CAACS,GAAL,CAAS,CAACM,CAAD,EAAIC,CAAJ,KAAU;AACnB,UAAGA,CAAC,KAAKF,OAAT,EAAkB;AAChB,eAAO;AACLH,UAAAA,OAAO,EAAEI,CAAC,CAACJ,OADN;AAELC,UAAAA,MAAM,EAAE,CAACG,CAAC,CAACH;AAFN,SAAP;AAID,OALD,MAKO;AACL,eAAOG,CAAP;AACD;AACF,KATC,CADG,CAAP;AAYD,GAbD;;AAeA,QAAME,IAAI,GAAIH,OAAD,IAAa;AACxB,QAAGZ,SAAS,KAAK,IAAjB,EAAuB;AACrBC,MAAAA,YAAY,CAAEW,OAAF,CAAZ;AACD,KAFD,MAEO;AACL,YAAMI,gBAAgB,GAAGlB,IAAI,CAACE,SAAD,CAAJ,CAAgBS,OAAzC;AACA,YAAMQ,iBAAiB,GAAGnB,IAAI,CAACc,OAAD,CAAJ,CAAcH,OAAxC;;AACA,UAAGO,gBAAgB,KAAKC,iBAAxB,EAA2C;AACzChB,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,OAFD,MAEO;AACLiB,QAAAA,UAAU,CAAC,MAAM;AACfP,UAAAA,UAAU,CAACX,SAAD,EAAY,KAAZ,CAAV;AACAW,UAAAA,UAAU,CAACC,OAAD,EAAU,KAAV,CAAV;AACAX,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,SAJS,EAIP,IAJO,CAAV;AAKD;AACF;;AAEDU,IAAAA,UAAU,CAACC,OAAD,EAAU,CAACd,IAAI,CAACc,OAAD,CAAJ,CAAcF,MAAzB,CAAV;AACD,GAlBD;;AAoBES,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWrB,SAAvB;AACA,SACE,KAAKqB,KAAL,CAAWvB,IAAX,CAAgBS,GAAhB,CAAoB,CAACM,CAAD,EAAIC,CAAJ,KAAU;AAC5B,wBAAQ;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACN,QAAC,IAAD;AACE,QAAA,IAAI,EAAE,MAAM;AAAC,eAAKC,IAAL,CAAUD,CAAV;AAAa,SAD5B;AAEE,QAAA,OAAO,EAAED,CAAC,CAACJ,OAFb;AAGE,QAAA,MAAM,EAAEI,CAAC,CAACH;AAHZ;AAAA;AAAA;AAAA;AAAA;AADM;AAAA;AAAA;AAAA;AAAA,YAAR;AAMD,GAPD,CADF;AAWH,CA/ED;;GAAMb,K;;KAAAA,K;AAiFN,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport Card from '../Card';\nimport './style.css';\n\nconst Board = () => {\n\n    const [deck, setDeck] = useState([]);\n    const [firstCard, setFirstCard] = useState(null);\n \n    const fronts = [\n      '💩',\n      '👹',\n      '👿',\n      '🧠',\n      '🚗',\n      '🚲',\n      '🚂',\n      '🧸',\n      '🤨',\n      '🤟',\n      '♥️',\n      '🦟',\n      '🦨',\n    ]\n    \n     deck = fronts\n      .concat(fronts)\n      .sort(() => Math.random() - 0.5)\n      .map(item => {\n        return {\n          content: item,\n          faceUp: false,\n        }\n      })\n\n\n  const flipCardTo= (cardIdx, faceUp) => {\n    setDeck(\n        deck.map((f, i) => {\n        if(i === cardIdx) {\n          return {\n            content: f.content,\n            faceUp: !f.faceUp,\n          }\n        } else {\n          return f;\n        }\n      })\n    )\n  }\n\n  const flip = (cardIdx) => {\n    if(firstCard === null) {\n      setFirstCard( cardIdx );\n    } else {\n      const firstCardContent = deck[firstCard].content;\n      const secondCardContent = deck[cardIdx].content;\n      if(firstCardContent === secondCardContent) {\n        setFirstCard(null);\n      } else {\n        setTimeout(() => {\n          flipCardTo(firstCard, false)\n          flipCardTo(cardIdx, false)\n          setFirstCard(null);\n        }, 1000)\n      }\n    }\n\n    flipCardTo(cardIdx, !deck[cardIdx].faceUp)\n  }\n\n    console.log(this.state.firstCard);\n    return (\n      this.state.deck.map((f, i) => {\n        return (<div className=\"Board\">\n          <Card\n            flip={() => {this.flip(i)}}\n            content={f.content}\n            faceUp={f.faceUp} />\n        </div>)\n      })\n    )\n\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}